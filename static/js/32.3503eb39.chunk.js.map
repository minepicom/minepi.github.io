{"version":3,"sources":["../static/js/32.3503eb39.chunk.js","components/OTCTradeTable.js"],"names":["webpackJsonp","513","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0_react__","__WEBPACK_IMPORTED_MODULE_0_react___default","n","__WEBPACK_IMPORTED_MODULE_1_prop_types__","__WEBPACK_IMPORTED_MODULE_1_prop_types___default","__WEBPACK_IMPORTED_MODULE_2_recompose__","__WEBPACK_IMPORTED_MODULE_3_react_bootstrap_lib_Table__","__WEBPACK_IMPORTED_MODULE_3_react_bootstrap_lib_Table___default","__WEBPACK_IMPORTED_MODULE_4_react_intl__","__WEBPACK_IMPORTED_MODULE_5_lodash_filter__","__WEBPACK_IMPORTED_MODULE_5_lodash_filter___default","__WEBPACK_IMPORTED_MODULE_6_lodash_mapKeys__","__WEBPACK_IMPORTED_MODULE_6_lodash_mapKeys___default","__WEBPACK_IMPORTED_MODULE_7_lodash_camelCase__","__WEBPACK_IMPORTED_MODULE_7_lodash_camelCase___default","__WEBPACK_IMPORTED_MODULE_8__operations_Operation__","__WEBPACK_IMPORTED_MODULE_9__shared_DataFetchingContainer__","__WEBPACK_IMPORTED_MODULE_10__shared_DataFetchingAllContainer__","__WEBPACK_IMPORTED_MODULE_11__shared_Paging__","__WEBPACK_IMPORTED_MODULE_12__shared_Spinner__","__WEBPACK_IMPORTED_MODULE_13__shared_CSVExport__","_this","this","OtcTradeTable","props","a","createElement","id","className","compact","class","records","map","payment","key","op","opURLFn","server","opURL","parentRenderTimestamp","ExportToCSVComponent","account","propTypes","PropTypes","bool","number","array","isRequired","object","rspRecToPropsRec","record","time","created_at","mapKeys","v","k","camelCase","fetchRecords","_ref","tx","limit","getBuilder","builder","payments","forTransaction","forAccount","order","filterForType","getOperationTypeFilter","fetchUntilEnoughDataToDisplay","undefined","call","opTypeFilter","window","location","search","match","cursors","currentCursor","accumulatedRsp","totalFetchedRecs","cursor","then","rsp","length","filteredRecs","filter","rec","type","concat","index","paging_token","lessRecordsThanLimitReady","isMoreDataAvailable","possiblyMoreDataAvailable","next","Promise","resolve","push","newCursor","prev","oldCursor","pop","callBuilder","withDataFetchingAllContainer","CSVExport","enhance","compose","withPaging","withDataFetchingContainer","withSpinner"],"mappings":"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","file":"static/js/32.3503eb39.chunk.js","sourcesContent":["webpackJsonp([32],{\n\n/***/ 513:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_react___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_react__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types__ = __webpack_require__(1);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_prop_types__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_recompose__ = __webpack_require__(117);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_bootstrap_lib_Table__ = __webpack_require__(165);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_react_bootstrap_lib_Table___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_react_bootstrap_lib_Table__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_react_intl__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_lodash_filter__ = __webpack_require__(471);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_lodash_filter___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_lodash_filter__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_lodash_mapKeys__ = __webpack_require__(273);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_lodash_mapKeys___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_lodash_mapKeys__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_lodash_camelCase__ = __webpack_require__(274);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_lodash_camelCase___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_lodash_camelCase__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__operations_Operation__ = __webpack_require__(173);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__shared_DataFetchingContainer__ = __webpack_require__(83);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__shared_DataFetchingAllContainer__ = __webpack_require__(118);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__shared_Paging__ = __webpack_require__(82);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__shared_Spinner__ = __webpack_require__(57);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__shared_CSVExport__ = __webpack_require__(119);\nvar _this=this;var OtcTradeTable=function OtcTradeTable(props){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_3_react_bootstrap_lib_Table___default.a,{id:'payment-table',className:'table-striped table-hover table-condensed'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('thead',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('tr',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('th',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4_react_intl__[\"b\" /* FormattedMessage */],{id:'account'})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('th',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4_react_intl__[\"b\" /* FormattedMessage */],{id:'payment'})),props.compact===false&&__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('th',{'class':'block-column'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4_react_intl__[\"b\" /* FormattedMessage */],{id:'transaction'})),props.compact===false&&__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('th',{'class':'block-column'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4_react_intl__[\"b\" /* FormattedMessage */],{id:'type'})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('th',null,__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_4_react_intl__[\"b\" /* FormattedMessage */],{id:'time'})),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('th',null))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('tbody',null,props.records.map(function(payment){return __WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(__WEBPACK_IMPORTED_MODULE_8__operations_Operation__[\"default\"],{key:payment.id,compact:props.compact,op:payment,opURLFn:props.server.opURL,parentRenderTimestamp:props.parentRenderTimestamp});}))),__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement('div',{className:'text-center',id:'csv-export'},__WEBPACK_IMPORTED_MODULE_0_react___default.a.createElement(ExportToCSVComponent,{server:props.server,account:props.account})));};OtcTradeTable.propTypes={compact:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.bool,parentRenderTimestamp:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.number,records:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.array.isRequired,server:__WEBPACK_IMPORTED_MODULE_1_prop_types___default.a.object.isRequired};var rspRecToPropsRec=function rspRecToPropsRec(record){record.time=record.created_at;return __WEBPACK_IMPORTED_MODULE_6_lodash_mapKeys___default()(record,function(v,k){return __WEBPACK_IMPORTED_MODULE_7_lodash_camelCase___default()(k);});};var fetchRecords=function fetchRecords(_ref){var account=_ref.account,tx=_ref.tx,limit=_ref.limit,server=_ref.server;var getBuilder=function getBuilder(){var builder=server.payments();if(tx)builder.forTransaction(tx);if(account)builder.forAccount(account);builder.limit(limit);builder.order('desc');return builder;};var filterForType=getOperationTypeFilter();if(filterForType){return fetchUntilEnoughDataToDisplay(getBuilder,filterForType,limit,undefined,0,0,0);}return getBuilder().call();};var getOperationTypeFilter=function getOperationTypeFilter(){var opTypeFilter=window.location.search.match(/opTypeFilter=([a-z_]*)/);if(opTypeFilter&&opTypeFilter[1]){return opTypeFilter[1];}};var cursors=[];var currentCursor=0;var fetchUntilEnoughDataToDisplay=function fetchUntilEnoughDataToDisplay(getBuilder,filterForType,limit,accumulatedRsp,totalFetchedRecs,cursor){var builder=cursor?getBuilder().cursor(cursor):getBuilder();return builder.call().then(function(rsp){var records=rsp.records;totalFetchedRecs+=records.length;var filteredRecs=__WEBPACK_IMPORTED_MODULE_5_lodash_filter___default()(records,function(rec){return rec.type===filterForType;});if(!accumulatedRsp){accumulatedRsp=rsp;accumulatedRsp.records=[];}accumulatedRsp.records=accumulatedRsp.records.concat(filteredRecs);var index=records.length-1;var cursor=records.length>0&&index>=0?records[index].paging_token:0;// recursively request more until limit is reached\nvar maxTotalRecordsToFetch=400;if(accumulatedRsp.records.length<limit&&records.length>0&&totalFetchedRecs<maxTotalRecordsToFetch){return fetchUntilEnoughDataToDisplay(getBuilder,filterForType,limit,accumulatedRsp,totalFetchedRecs,cursor);}else{// there is no way for us to know how many occurrences exist for a\n// certain type. for example, somebody could create a filter for ops\n// of type 'foo'. if the total operations dataset is very large, but\n// contains only one record of type 'foo' then we would recursively need\n// to fetch the entire operations dataset, because we want to fill up\n// the page to the maximum of records and we don't know when to stop\n// fetching records.\nvar lessRecordsThanLimitReady=accumulatedRsp.records.length<limit;var isMoreDataAvailable=cursor!==0;if(totalFetchedRecs>=maxTotalRecordsToFetch&&isMoreDataAvailable&&lessRecordsThanLimitReady){_this.possiblyMoreDataAvailable=true;}// the prev cursor stays the same, but the next cursor has to be set for the\n// latest rsp.next, so that if the user presses next the filtering would\n// continue from where we stopped last.\naccumulatedRsp.next=function(){if(records.length===0)return Promise.resolve(rsp);cursors.push(currentCursor);var newCursor=records[records.length-1].paging_token;currentCursor=newCursor;return fetchUntilEnoughDataToDisplay(getBuilder,filterForType,limit,undefined,0,newCursor);};accumulatedRsp.prev=function(){if(records.length===0)return Promise.resolve(rsp);var oldCursor=cursors.pop();return fetchUntilEnoughDataToDisplay(getBuilder,filterForType,limit,undefined,0,oldCursor);};return Promise.resolve(accumulatedRsp);}});};var callBuilder=function callBuilder(props){return props.server.payments();};var ExportToCSVComponent=Object(__WEBPACK_IMPORTED_MODULE_10__shared_DataFetchingAllContainer__[\"withDataFetchingAllContainer\"])(fetchRecords)(__WEBPACK_IMPORTED_MODULE_13__shared_CSVExport__[\"default\"]);var enhance=Object(__WEBPACK_IMPORTED_MODULE_2_recompose__[\"a\" /* compose */])(Object(__WEBPACK_IMPORTED_MODULE_11__shared_Paging__[\"withPaging\"])(),Object(__WEBPACK_IMPORTED_MODULE_9__shared_DataFetchingContainer__[\"withDataFetchingContainer\"])(fetchRecords,rspRecToPropsRec,callBuilder),Object(__WEBPACK_IMPORTED_MODULE_12__shared_Spinner__[\"withSpinner\"])());/* harmony default export */ __webpack_exports__[\"default\"] = (enhance(OtcTradeTable));\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// static/js/32.3503eb39.chunk.js","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {compose} from 'recompose'\nimport Table from 'react-bootstrap/lib/Table'\nimport {FormattedMessage} from 'react-intl'\nimport filter from 'lodash/filter'\nimport mapKeys from 'lodash/mapKeys'\nimport camelCase from 'lodash/camelCase'\n\nimport Operation from './operations/Operation'\nimport {withDataFetchingContainer} from './shared/DataFetchingContainer'\nimport {withDataFetchingAllContainer} from './shared/DataFetchingAllContainer'\nimport {withPaging} from './shared/Paging'\nimport {withSpinner} from './shared/Spinner'\nimport CSVExport from './shared/CSVExport'\n\nconst OtcTradeTable = props =>(\n  <div>\n    <Table\n      id=\"payment-table\"\n      className=\"table-striped table-hover table-condensed\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <FormattedMessage id=\"account\" />\n          </th>\n          <th>\n            <FormattedMessage id=\"payment\" />\n          </th>\n          {props.compact === false && (\n            <th class=\"block-column\">\n              <FormattedMessage id=\"transaction\" />\n            </th>\n          )}\n          {props.compact === false && (\n            <th class=\"block-column\">\n              <FormattedMessage id=\"type\" />\n            </th>\n          )}\n          <th>\n            <FormattedMessage id=\"time\" />\n          </th>\n          <th />\n        </tr>\n      </thead>\n      <tbody>\n        {props.records.map(payment => (\n          <Operation\n            key={payment.id}\n            compact={props.compact}\n            op={payment}\n            opURLFn={props.server.opURL}\n            parentRenderTimestamp={props.parentRenderTimestamp}\n          />\n        ))}\n      </tbody>\n    </Table>\n    <div className=\"text-center\" id=\"csv-export\">\n      <ExportToCSVComponent server={props.server} account={props.account} />\n    </div>\n  </div>\n)\n\nOtcTradeTable.propTypes = {\n  compact: PropTypes.bool,\n  parentRenderTimestamp: PropTypes.number,\n  records: PropTypes.array.isRequired,\n  server: PropTypes.object.isRequired,\n}\n\nconst rspRecToPropsRec = record => {\n  record.time = record.created_at\n  return mapKeys(record, (v, k) => camelCase(k))\n}\n\nconst fetchRecords = ({account, tx, limit, server}) => {\n  const getBuilder = () => {\n    const builder = server.payments()\n    if (tx) builder.forTransaction(tx)\n    if (account) builder.forAccount(account)\n    builder.limit(limit)\n    builder.order('desc')\n    return builder\n  }\n  const filterForType = getOperationTypeFilter()\n  if (filterForType) {\n    return fetchUntilEnoughDataToDisplay(\n      getBuilder,\n      filterForType,\n      limit,\n      undefined,\n      0,\n      0,\n      0\n    )\n  }\n  return getBuilder().call()\n\n}\n\n\n\nconst getOperationTypeFilter = () => {\n  const opTypeFilter = window.location.search.match(/opTypeFilter=([a-z_]*)/)\n  if (opTypeFilter && opTypeFilter[1]) {\n    return opTypeFilter[1]\n  }\n}\n\nlet cursors = []\nlet currentCursor = 0\nconst fetchUntilEnoughDataToDisplay = (\n  getBuilder,\n  filterForType,\n  limit,\n  accumulatedRsp,\n  totalFetchedRecs,\n  cursor\n) => {\n  const builder = cursor ? getBuilder().cursor(cursor) : getBuilder()\n\n  return builder.call().then(rsp => {\n    const records = rsp.records\n    totalFetchedRecs += records.length\n    const filteredRecs = filter(records, rec => rec.type === filterForType)\n\n    if (!accumulatedRsp) {\n      accumulatedRsp = rsp\n      accumulatedRsp.records = []\n    }\n\n    accumulatedRsp.records = accumulatedRsp.records.concat(filteredRecs)\n\n    const index = records.length - 1\n    let cursor =\n      records.length > 0 && index >= 0 ? records[index].paging_token : 0\n\n    // recursively request more until limit is reached\n    const maxTotalRecordsToFetch = 400\n    if (\n      accumulatedRsp.records.length < limit &&\n      records.length > 0 &&\n      totalFetchedRecs < maxTotalRecordsToFetch\n    ) {\n      return fetchUntilEnoughDataToDisplay(\n        getBuilder,\n        filterForType,\n        limit,\n        accumulatedRsp,\n        totalFetchedRecs,\n        cursor\n      )\n    } else {\n      // there is no way for us to know how many occurrences exist for a\n      // certain type. for example, somebody could create a filter for ops\n      // of type 'foo'. if the total operations dataset is very large, but\n      // contains only one record of type 'foo' then we would recursively need\n      // to fetch the entire operations dataset, because we want to fill up\n      // the page to the maximum of records and we don't know when to stop\n      // fetching records.\n      const lessRecordsThanLimitReady = accumulatedRsp.records.length < limit\n      const isMoreDataAvailable = cursor !== 0\n      if (\n        totalFetchedRecs >= maxTotalRecordsToFetch &&\n        isMoreDataAvailable &&\n        lessRecordsThanLimitReady\n      ) {\n        this.possiblyMoreDataAvailable = true\n      }\n\n      // the prev cursor stays the same, but the next cursor has to be set for the\n      // latest rsp.next, so that if the user presses next the filtering would\n      // continue from where we stopped last.\n      accumulatedRsp.next = (...props) => {\n        if (records.length === 0) return Promise.resolve(rsp)\n\n        cursors.push(currentCursor)\n        const newCursor = records[records.length - 1].paging_token\n        currentCursor = newCursor\n\n        return fetchUntilEnoughDataToDisplay(\n          getBuilder,\n          filterForType,\n          limit,\n          undefined,\n          0,\n          newCursor\n        )\n      }\n\n      accumulatedRsp.prev = (...props) => {\n        if (records.length === 0) return Promise.resolve(rsp)\n\n        let oldCursor = cursors.pop()\n        return fetchUntilEnoughDataToDisplay(\n          getBuilder,\n          filterForType,\n          limit,\n          undefined,\n          0,\n          oldCursor\n        )\n      }\n\n      return Promise.resolve(accumulatedRsp)\n    }\n  })\n}\nconst callBuilder = props => props.server.payments()\n\nconst ExportToCSVComponent = withDataFetchingAllContainer(fetchRecords)(\n  CSVExport\n)\n\nconst enhance = compose(\n  withPaging(),\n  withDataFetchingContainer(fetchRecords, rspRecToPropsRec, callBuilder),\n  withSpinner()\n)\n\nexport default enhance(OtcTradeTable)\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/OTCTradeTable.js"],"sourceRoot":""}